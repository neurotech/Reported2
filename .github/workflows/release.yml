name: "Tagged Release"

on:
  push:
    tags:
      - "*"

jobs:
  tagged-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code and generate TOC files
        uses: actions/checkout@v2

      - name: Generate TOC files
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}
        run: mkdir -p Reported2
        run: touch Reported2-Retail.toc Reported2-Classic.toc
        run: sed -i "s/ADDON_VERSION/${{ env.RELEASE_VERSION }}/g" Reported2.toctemplate
        run: cat Reported2.toctemplate > Reported2-Retail.toc
        run: cat Reported2.toctemplate > Reported2-Classic.toc
        run: sed -i "s/INTERFACE_VERSION/$(cat ./versions/retail)/g" Reported2-Retail.toc
        run: sed -i "s/INTERFACE_VERSION/$(cat ./versions/classic)/g" Reported2-Classic.toc
        run: cp *.lua *.mp3 *.tga ./Reported2/
        run: cp Reported2-Retail.toc ./Reported2/Reported2.toc

      - name: Build Retail zip
        uses: edgarrc/action-7z@v1.0.4
        with:
          args: 7z a Reported2-${{ env.RELEASE_VERSION }}.zip ./Reported2/

      - run: cp Reported2-Classic.toc ./Reported2/Reported2.toc

      - name: Build Classic zip
        uses: edgarrc/action-7z@v1.0.4
        with:
          args: 7z a Reported2-${{ env.RELEASE_VERSION }}-classic.zip ./Reported2/

      - name: Publish Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            Reported2-${{ env.RELEASE_VERSION }}.zip
            Reported2-${{ env.RELEASE_VERSION }}-classic.zip
